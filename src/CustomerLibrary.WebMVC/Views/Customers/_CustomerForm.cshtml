@using CustomerLibrary
@model CustomerLibrary.Customer

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>

        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        @Html.HiddenFor(model => model.CustomerId)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group m-bt">
            @Html.LabelFor(model => model.TotalPurchasesAmount, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalPurchasesAmount, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.TotalPurchasesAmount, "", new {@class = "text-danger"})
            </div>
        </div>

        @for (var index = 0; index < Model.Addresses.Count; index++)

        {
            <div class="m-lf">
                <h4 class="text-primary">Address</h4>

                @Html.HiddenFor(model => model.Addresses[index].AddressId)

                @Html.HiddenFor(model => model.Addresses[index].CustomerId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Addresses[index].AddressLine, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Addresses[index].AddressLine, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Addresses[index].AddressLine, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Addresses[index].AddressLine2, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Addresses[index].AddressLine2, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Addresses[index].AddressLine2, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Addresses[index].AddressType, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Addresses[index].AddressType, new SelectList(Enum.GetValues(typeof(AddressTypes))), new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Addresses[index].AddressType, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Addresses[index].City, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Addresses[index].City, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Addresses[index].City, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Addresses[index].PostalCode, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Addresses[index].PostalCode, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Addresses[index].PostalCode, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Addresses[index].State, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Addresses[index].State, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Addresses[index].State, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Addresses[index].Country, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Addresses[index].Country, new SelectList(new string[] {"United States", "Canada"}), new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Addresses[index].Country, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        }

        <div class="m-lf">
            <h4 class="text-primary">Notes</h4>

            @for (var index = 0; index < Model.Notes.Count; index++)

            {
                @Html.HiddenFor(model => model.Notes[index].NoteId)

                @Html.HiddenFor(model => model.Notes[index].CustomerId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Notes[index].NoteText, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Notes[index].NoteText, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Notes[index].NoteText, "", new {@class = "text-danger"})
                    </div>
                </div>
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@ViewData["ButtonText"] class="btn btn-default"/>
            </div>
        </div>
    </div>
}